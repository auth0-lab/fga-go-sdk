/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaReadResponse struct for Auth0FgaReadResponse
type Auth0FgaReadResponse struct {
	Tuples *[]Auth0FgaTuple `json:"tuples,omitempty"`
}

// NewAuth0FgaReadResponse instantiates a new Auth0FgaReadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaReadResponse() *Auth0FgaReadResponse {
	this := Auth0FgaReadResponse{}
	return &this
}

// NewAuth0FgaReadResponseWithDefaults instantiates a new Auth0FgaReadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaReadResponseWithDefaults() *Auth0FgaReadResponse {
	this := Auth0FgaReadResponse{}
	return &this
}

// GetTuples returns the Tuples field value if set, zero value otherwise.
func (o *Auth0FgaReadResponse) GetTuples() []Auth0FgaTuple {
	if o == nil || o.Tuples == nil {
		var ret []Auth0FgaTuple
		return ret
	}
	return *o.Tuples
}

// GetTuplesOk returns a tuple with the Tuples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Auth0FgaReadResponse) GetTuplesOk() (*[]Auth0FgaTuple, bool) {
	if o == nil || o.Tuples == nil {
		return nil, false
	}
	return o.Tuples, true
}

// HasTuples returns a boolean if a field has been set.
func (o *Auth0FgaReadResponse) HasTuples() bool {
	if o != nil && o.Tuples != nil {
		return true
	}

	return false
}

// SetTuples gets a reference to the given []Auth0FgaTuple and assigns it to the Tuples field.
func (o *Auth0FgaReadResponse) SetTuples(v []Auth0FgaTuple) {
	o.Tuples = &v
}

func (o Auth0FgaReadResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tuples != nil {
		toSerialize["tuples"] = o.Tuples
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaReadResponse struct {
	value *Auth0FgaReadResponse
	isSet bool
}

func (v NullableAuth0FgaReadResponse) Get() *Auth0FgaReadResponse {
	return v.value
}

func (v *NullableAuth0FgaReadResponse) Set(val *Auth0FgaReadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaReadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaReadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaReadResponse(val *Auth0FgaReadResponse) *NullableAuth0FgaReadResponse {
	return &NullableAuth0FgaReadResponse{value: val, isSet: true}
}

func (v NullableAuth0FgaReadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaReadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
