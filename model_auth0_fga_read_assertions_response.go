/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaReadAssertionsResponse struct for Auth0FgaReadAssertionsResponse
type Auth0FgaReadAssertionsResponse struct {
	// The authorization model ID
	AuthorizationModelId *string              `json:"authorization_model_id,omitempty"`
	Assertions           *[]Auth0FgaAssertion `json:"assertions,omitempty"`
}

// NewAuth0FgaReadAssertionsResponse instantiates a new Auth0FgaReadAssertionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaReadAssertionsResponse() *Auth0FgaReadAssertionsResponse {
	this := Auth0FgaReadAssertionsResponse{}
	return &this
}

// NewAuth0FgaReadAssertionsResponseWithDefaults instantiates a new Auth0FgaReadAssertionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaReadAssertionsResponseWithDefaults() *Auth0FgaReadAssertionsResponse {
	this := Auth0FgaReadAssertionsResponse{}
	return &this
}

// GetAuthorizationModelId returns the AuthorizationModelId field value if set, zero value otherwise.
func (o *Auth0FgaReadAssertionsResponse) GetAuthorizationModelId() string {
	if o == nil || o.AuthorizationModelId == nil {
		var ret string
		return ret
	}
	return *o.AuthorizationModelId
}

// GetAuthorizationModelIdOk returns a tuple with the AuthorizationModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Auth0FgaReadAssertionsResponse) GetAuthorizationModelIdOk() (*string, bool) {
	if o == nil || o.AuthorizationModelId == nil {
		return nil, false
	}
	return o.AuthorizationModelId, true
}

// HasAuthorizationModelId returns a boolean if a field has been set.
func (o *Auth0FgaReadAssertionsResponse) HasAuthorizationModelId() bool {
	if o != nil && o.AuthorizationModelId != nil {
		return true
	}

	return false
}

// SetAuthorizationModelId gets a reference to the given string and assigns it to the AuthorizationModelId field.
func (o *Auth0FgaReadAssertionsResponse) SetAuthorizationModelId(v string) {
	o.AuthorizationModelId = &v
}

// GetAssertions returns the Assertions field value if set, zero value otherwise.
func (o *Auth0FgaReadAssertionsResponse) GetAssertions() []Auth0FgaAssertion {
	if o == nil || o.Assertions == nil {
		var ret []Auth0FgaAssertion
		return ret
	}
	return *o.Assertions
}

// GetAssertionsOk returns a tuple with the Assertions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Auth0FgaReadAssertionsResponse) GetAssertionsOk() (*[]Auth0FgaAssertion, bool) {
	if o == nil || o.Assertions == nil {
		return nil, false
	}
	return o.Assertions, true
}

// HasAssertions returns a boolean if a field has been set.
func (o *Auth0FgaReadAssertionsResponse) HasAssertions() bool {
	if o != nil && o.Assertions != nil {
		return true
	}

	return false
}

// SetAssertions gets a reference to the given []Auth0FgaAssertion and assigns it to the Assertions field.
func (o *Auth0FgaReadAssertionsResponse) SetAssertions(v []Auth0FgaAssertion) {
	o.Assertions = &v
}

func (o Auth0FgaReadAssertionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthorizationModelId != nil {
		toSerialize["authorization_model_id"] = o.AuthorizationModelId
	}
	if o.Assertions != nil {
		toSerialize["assertions"] = o.Assertions
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaReadAssertionsResponse struct {
	value *Auth0FgaReadAssertionsResponse
	isSet bool
}

func (v NullableAuth0FgaReadAssertionsResponse) Get() *Auth0FgaReadAssertionsResponse {
	return v.value
}

func (v *NullableAuth0FgaReadAssertionsResponse) Set(val *Auth0FgaReadAssertionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaReadAssertionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaReadAssertionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaReadAssertionsResponse(val *Auth0FgaReadAssertionsResponse) *NullableAuth0FgaReadAssertionsResponse {
	return &NullableAuth0FgaReadAssertionsResponse{value: val, isSet: true}
}

func (v NullableAuth0FgaReadAssertionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaReadAssertionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
