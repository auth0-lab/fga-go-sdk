/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaUsersetTreeTupleToUserset struct for Auth0FgaUsersetTreeTupleToUserset
type Auth0FgaUsersetTreeTupleToUserset struct {
	Tupleset *string                `json:"tupleset,omitempty"`
	Computed *[]UsersetTreeComputed `json:"computed,omitempty"`
}

// NewAuth0FgaUsersetTreeTupleToUserset instantiates a new Auth0FgaUsersetTreeTupleToUserset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaUsersetTreeTupleToUserset() *Auth0FgaUsersetTreeTupleToUserset {
	this := Auth0FgaUsersetTreeTupleToUserset{}
	return &this
}

// NewAuth0FgaUsersetTreeTupleToUsersetWithDefaults instantiates a new Auth0FgaUsersetTreeTupleToUserset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaUsersetTreeTupleToUsersetWithDefaults() *Auth0FgaUsersetTreeTupleToUserset {
	this := Auth0FgaUsersetTreeTupleToUserset{}
	return &this
}

// GetTupleset returns the Tupleset field value if set, zero value otherwise.
func (o *Auth0FgaUsersetTreeTupleToUserset) GetTupleset() string {
	if o == nil || o.Tupleset == nil {
		var ret string
		return ret
	}
	return *o.Tupleset
}

// GetTuplesetOk returns a tuple with the Tupleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Auth0FgaUsersetTreeTupleToUserset) GetTuplesetOk() (*string, bool) {
	if o == nil || o.Tupleset == nil {
		return nil, false
	}
	return o.Tupleset, true
}

// HasTupleset returns a boolean if a field has been set.
func (o *Auth0FgaUsersetTreeTupleToUserset) HasTupleset() bool {
	if o != nil && o.Tupleset != nil {
		return true
	}

	return false
}

// SetTupleset gets a reference to the given string and assigns it to the Tupleset field.
func (o *Auth0FgaUsersetTreeTupleToUserset) SetTupleset(v string) {
	o.Tupleset = &v
}

// GetComputed returns the Computed field value if set, zero value otherwise.
func (o *Auth0FgaUsersetTreeTupleToUserset) GetComputed() []UsersetTreeComputed {
	if o == nil || o.Computed == nil {
		var ret []UsersetTreeComputed
		return ret
	}
	return *o.Computed
}

// GetComputedOk returns a tuple with the Computed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Auth0FgaUsersetTreeTupleToUserset) GetComputedOk() (*[]UsersetTreeComputed, bool) {
	if o == nil || o.Computed == nil {
		return nil, false
	}
	return o.Computed, true
}

// HasComputed returns a boolean if a field has been set.
func (o *Auth0FgaUsersetTreeTupleToUserset) HasComputed() bool {
	if o != nil && o.Computed != nil {
		return true
	}

	return false
}

// SetComputed gets a reference to the given []UsersetTreeComputed and assigns it to the Computed field.
func (o *Auth0FgaUsersetTreeTupleToUserset) SetComputed(v []UsersetTreeComputed) {
	o.Computed = &v
}

func (o Auth0FgaUsersetTreeTupleToUserset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tupleset != nil {
		toSerialize["tupleset"] = o.Tupleset
	}
	if o.Computed != nil {
		toSerialize["computed"] = o.Computed
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaUsersetTreeTupleToUserset struct {
	value *Auth0FgaUsersetTreeTupleToUserset
	isSet bool
}

func (v NullableAuth0FgaUsersetTreeTupleToUserset) Get() *Auth0FgaUsersetTreeTupleToUserset {
	return v.value
}

func (v *NullableAuth0FgaUsersetTreeTupleToUserset) Set(val *Auth0FgaUsersetTreeTupleToUserset) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaUsersetTreeTupleToUserset) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaUsersetTreeTupleToUserset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaUsersetTreeTupleToUserset(val *Auth0FgaUsersetTreeTupleToUserset) *NullableAuth0FgaUsersetTreeTupleToUserset {
	return &NullableAuth0FgaUsersetTreeTupleToUserset{value: val, isSet: true}
}

func (v NullableAuth0FgaUsersetTreeTupleToUserset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaUsersetTreeTupleToUserset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
