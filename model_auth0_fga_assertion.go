/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaAssertion struct for Auth0FgaAssertion
type Auth0FgaAssertion struct {
	TupleKey    Auth0FgaTupleKey `json:"tuple_key"`
	Expectation bool             `json:"expectation"`
}

// NewAuth0FgaAssertion instantiates a new Auth0FgaAssertion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaAssertion(tupleKey Auth0FgaTupleKey, expectation bool) *Auth0FgaAssertion {
	this := Auth0FgaAssertion{}
	this.TupleKey = tupleKey
	this.Expectation = expectation
	return &this
}

// NewAuth0FgaAssertionWithDefaults instantiates a new Auth0FgaAssertion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaAssertionWithDefaults() *Auth0FgaAssertion {
	this := Auth0FgaAssertion{}
	return &this
}

// GetTupleKey returns the TupleKey field value
func (o *Auth0FgaAssertion) GetTupleKey() Auth0FgaTupleKey {
	if o == nil {
		var ret Auth0FgaTupleKey
		return ret
	}

	return o.TupleKey
}

// GetTupleKeyOk returns a tuple with the TupleKey field value
// and a boolean to check if the value has been set.
func (o *Auth0FgaAssertion) GetTupleKeyOk() (*Auth0FgaTupleKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TupleKey, true
}

// SetTupleKey sets field value
func (o *Auth0FgaAssertion) SetTupleKey(v Auth0FgaTupleKey) {
	o.TupleKey = v
}

// GetExpectation returns the Expectation field value
func (o *Auth0FgaAssertion) GetExpectation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Expectation
}

// GetExpectationOk returns a tuple with the Expectation field value
// and a boolean to check if the value has been set.
func (o *Auth0FgaAssertion) GetExpectationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expectation, true
}

// SetExpectation sets field value
func (o *Auth0FgaAssertion) SetExpectation(v bool) {
	o.Expectation = v
}

func (o Auth0FgaAssertion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tuple_key"] = o.TupleKey
	}
	if true {
		toSerialize["expectation"] = o.Expectation
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaAssertion struct {
	value *Auth0FgaAssertion
	isSet bool
}

func (v NullableAuth0FgaAssertion) Get() *Auth0FgaAssertion {
	return v.value
}

func (v *NullableAuth0FgaAssertion) Set(val *Auth0FgaAssertion) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaAssertion) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaAssertion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaAssertion(val *Auth0FgaAssertion) *NullableAuth0FgaAssertion {
	return &NullableAuth0FgaAssertion{value: val, isSet: true}
}

func (v NullableAuth0FgaAssertion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaAssertion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
