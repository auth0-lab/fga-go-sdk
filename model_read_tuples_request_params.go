/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// ReadTuplesRequestParams struct for ReadTuplesRequestParams
type ReadTuplesRequestParams struct {
	PageSize          *int32  `json:"page_size,omitempty"`
	ContinuationToken *string `json:"continuation_token,omitempty"`
}

// NewReadTuplesRequestParams instantiates a new ReadTuplesRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadTuplesRequestParams() *ReadTuplesRequestParams {
	this := ReadTuplesRequestParams{}
	return &this
}

// NewReadTuplesRequestParamsWithDefaults instantiates a new ReadTuplesRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadTuplesRequestParamsWithDefaults() *ReadTuplesRequestParams {
	this := ReadTuplesRequestParams{}
	return &this
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ReadTuplesRequestParams) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadTuplesRequestParams) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ReadTuplesRequestParams) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *ReadTuplesRequestParams) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise.
func (o *ReadTuplesRequestParams) GetContinuationToken() string {
	if o == nil || o.ContinuationToken == nil {
		var ret string
		return ret
	}
	return *o.ContinuationToken
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadTuplesRequestParams) GetContinuationTokenOk() (*string, bool) {
	if o == nil || o.ContinuationToken == nil {
		return nil, false
	}
	return o.ContinuationToken, true
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *ReadTuplesRequestParams) HasContinuationToken() bool {
	if o != nil && o.ContinuationToken != nil {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given string and assigns it to the ContinuationToken field.
func (o *ReadTuplesRequestParams) SetContinuationToken(v string) {
	o.ContinuationToken = &v
}

func (o ReadTuplesRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.ContinuationToken != nil {
		toSerialize["continuation_token"] = o.ContinuationToken
	}
	return json.Marshal(toSerialize)
}

type NullableReadTuplesRequestParams struct {
	value *ReadTuplesRequestParams
	isSet bool
}

func (v NullableReadTuplesRequestParams) Get() *ReadTuplesRequestParams {
	return v.value
}

func (v *NullableReadTuplesRequestParams) Set(val *ReadTuplesRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableReadTuplesRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableReadTuplesRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadTuplesRequestParams(val *ReadTuplesRequestParams) *NullableReadTuplesRequestParams {
	return &NullableReadTuplesRequestParams{value: val, isSet: true}
}

func (v NullableReadTuplesRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadTuplesRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
