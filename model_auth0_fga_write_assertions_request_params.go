/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaWriteAssertionsRequestParams struct for Auth0FgaWriteAssertionsRequestParams
type Auth0FgaWriteAssertionsRequestParams struct {
	Assertions []Auth0FgaAssertion `json:"assertions"`
}

// NewAuth0FgaWriteAssertionsRequestParams instantiates a new Auth0FgaWriteAssertionsRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaWriteAssertionsRequestParams(assertions []Auth0FgaAssertion) *Auth0FgaWriteAssertionsRequestParams {
	this := Auth0FgaWriteAssertionsRequestParams{}
	this.Assertions = assertions
	return &this
}

// NewAuth0FgaWriteAssertionsRequestParamsWithDefaults instantiates a new Auth0FgaWriteAssertionsRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaWriteAssertionsRequestParamsWithDefaults() *Auth0FgaWriteAssertionsRequestParams {
	this := Auth0FgaWriteAssertionsRequestParams{}
	return &this
}

// GetAssertions returns the Assertions field value
func (o *Auth0FgaWriteAssertionsRequestParams) GetAssertions() []Auth0FgaAssertion {
	if o == nil {
		var ret []Auth0FgaAssertion
		return ret
	}

	return o.Assertions
}

// GetAssertionsOk returns a tuple with the Assertions field value
// and a boolean to check if the value has been set.
func (o *Auth0FgaWriteAssertionsRequestParams) GetAssertionsOk() (*[]Auth0FgaAssertion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assertions, true
}

// SetAssertions sets field value
func (o *Auth0FgaWriteAssertionsRequestParams) SetAssertions(v []Auth0FgaAssertion) {
	o.Assertions = v
}

func (o Auth0FgaWriteAssertionsRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assertions"] = o.Assertions
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaWriteAssertionsRequestParams struct {
	value *Auth0FgaWriteAssertionsRequestParams
	isSet bool
}

func (v NullableAuth0FgaWriteAssertionsRequestParams) Get() *Auth0FgaWriteAssertionsRequestParams {
	return v.value
}

func (v *NullableAuth0FgaWriteAssertionsRequestParams) Set(val *Auth0FgaWriteAssertionsRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaWriteAssertionsRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaWriteAssertionsRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaWriteAssertionsRequestParams(val *Auth0FgaWriteAssertionsRequestParams) *NullableAuth0FgaWriteAssertionsRequestParams {
	return &NullableAuth0FgaWriteAssertionsRequestParams{value: val, isSet: true}
}

func (v NullableAuth0FgaWriteAssertionsRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaWriteAssertionsRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
