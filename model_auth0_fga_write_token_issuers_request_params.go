/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaWriteTokenIssuersRequestParams struct for Auth0FgaWriteTokenIssuersRequestParams
type Auth0FgaWriteTokenIssuersRequestParams struct {
	IssuerUrl *string `json:"issuer_url,omitempty"`
}

// NewAuth0FgaWriteTokenIssuersRequestParams instantiates a new Auth0FgaWriteTokenIssuersRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaWriteTokenIssuersRequestParams() *Auth0FgaWriteTokenIssuersRequestParams {
	this := Auth0FgaWriteTokenIssuersRequestParams{}
	return &this
}

// NewAuth0FgaWriteTokenIssuersRequestParamsWithDefaults instantiates a new Auth0FgaWriteTokenIssuersRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaWriteTokenIssuersRequestParamsWithDefaults() *Auth0FgaWriteTokenIssuersRequestParams {
	this := Auth0FgaWriteTokenIssuersRequestParams{}
	return &this
}

// GetIssuerUrl returns the IssuerUrl field value if set, zero value otherwise.
func (o *Auth0FgaWriteTokenIssuersRequestParams) GetIssuerUrl() string {
	if o == nil || o.IssuerUrl == nil {
		var ret string
		return ret
	}
	return *o.IssuerUrl
}

// GetIssuerUrlOk returns a tuple with the IssuerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Auth0FgaWriteTokenIssuersRequestParams) GetIssuerUrlOk() (*string, bool) {
	if o == nil || o.IssuerUrl == nil {
		return nil, false
	}
	return o.IssuerUrl, true
}

// HasIssuerUrl returns a boolean if a field has been set.
func (o *Auth0FgaWriteTokenIssuersRequestParams) HasIssuerUrl() bool {
	if o != nil && o.IssuerUrl != nil {
		return true
	}

	return false
}

// SetIssuerUrl gets a reference to the given string and assigns it to the IssuerUrl field.
func (o *Auth0FgaWriteTokenIssuersRequestParams) SetIssuerUrl(v string) {
	o.IssuerUrl = &v
}

func (o Auth0FgaWriteTokenIssuersRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssuerUrl != nil {
		toSerialize["issuer_url"] = o.IssuerUrl
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaWriteTokenIssuersRequestParams struct {
	value *Auth0FgaWriteTokenIssuersRequestParams
	isSet bool
}

func (v NullableAuth0FgaWriteTokenIssuersRequestParams) Get() *Auth0FgaWriteTokenIssuersRequestParams {
	return v.value
}

func (v *NullableAuth0FgaWriteTokenIssuersRequestParams) Set(val *Auth0FgaWriteTokenIssuersRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaWriteTokenIssuersRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaWriteTokenIssuersRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaWriteTokenIssuersRequestParams(val *Auth0FgaWriteTokenIssuersRequestParams) *NullableAuth0FgaWriteTokenIssuersRequestParams {
	return &NullableAuth0FgaWriteTokenIssuersRequestParams{value: val, isSet: true}
}

func (v NullableAuth0FgaWriteTokenIssuersRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaWriteTokenIssuersRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
