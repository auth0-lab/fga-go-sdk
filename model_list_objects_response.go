/**
 * Go SDK for Auth0 Fine Grained Authorization (FGA)
 *
 * API version: 0.1
 * Website: <https://fga.dev>
 * Documentation: <https://docs.fga.dev>
 * Support: <https://discord.gg/8naAwJfWN6>
 * License: [MIT](https://github.com/auth0-lab/fga-go-sdk/blob/main/LICENSE)
 *
 * NOTE: This file was auto generated by [OpenAPI Generator](https://openapi-generator.tech). DO NOT EDIT.
 */

package auth0fga

import (
	"encoding/json"
)

// ListObjectsResponse struct for ListObjectsResponse
type ListObjectsResponse struct {
	ObjectIds *[]string `json:"object_ids,omitempty"`
}

// NewListObjectsResponse instantiates a new ListObjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListObjectsResponse() *ListObjectsResponse {
	this := ListObjectsResponse{}
	return &this
}

// NewListObjectsResponseWithDefaults instantiates a new ListObjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListObjectsResponseWithDefaults() *ListObjectsResponse {
	this := ListObjectsResponse{}
	return &this
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise.
func (o *ListObjectsResponse) GetObjectIds() []string {
	if o == nil || o.ObjectIds == nil {
		var ret []string
		return ret
	}
	return *o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListObjectsResponse) GetObjectIdsOk() (*[]string, bool) {
	if o == nil || o.ObjectIds == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *ListObjectsResponse) HasObjectIds() bool {
	if o != nil && o.ObjectIds != nil {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given []string and assigns it to the ObjectIds field.
func (o *ListObjectsResponse) SetObjectIds(v []string) {
	o.ObjectIds = &v
}

func (o ListObjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectIds != nil {
		toSerialize["object_ids"] = o.ObjectIds
	}
	return json.Marshal(toSerialize)
}

type NullableListObjectsResponse struct {
	value *ListObjectsResponse
	isSet bool
}

func (v NullableListObjectsResponse) Get() *ListObjectsResponse {
	return v.value
}

func (v *NullableListObjectsResponse) Set(val *ListObjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListObjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListObjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListObjectsResponse(val *ListObjectsResponse) *NullableListObjectsResponse {
	return &NullableListObjectsResponse{value: val, isSet: true}
}

func (v NullableListObjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListObjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
