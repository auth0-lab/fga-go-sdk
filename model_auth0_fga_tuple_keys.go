/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// Auth0FgaTupleKeys struct for Auth0FgaTupleKeys
type Auth0FgaTupleKeys struct {
	TupleKeys []Auth0FgaTupleKey `json:"tuple_keys"`
}

// NewAuth0FgaTupleKeys instantiates a new Auth0FgaTupleKeys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuth0FgaTupleKeys(tupleKeys []Auth0FgaTupleKey) *Auth0FgaTupleKeys {
	this := Auth0FgaTupleKeys{}
	this.TupleKeys = tupleKeys
	return &this
}

// NewAuth0FgaTupleKeysWithDefaults instantiates a new Auth0FgaTupleKeys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuth0FgaTupleKeysWithDefaults() *Auth0FgaTupleKeys {
	this := Auth0FgaTupleKeys{}
	return &this
}

// GetTupleKeys returns the TupleKeys field value
func (o *Auth0FgaTupleKeys) GetTupleKeys() []Auth0FgaTupleKey {
	if o == nil {
		var ret []Auth0FgaTupleKey
		return ret
	}

	return o.TupleKeys
}

// GetTupleKeysOk returns a tuple with the TupleKeys field value
// and a boolean to check if the value has been set.
func (o *Auth0FgaTupleKeys) GetTupleKeysOk() (*[]Auth0FgaTupleKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TupleKeys, true
}

// SetTupleKeys sets field value
func (o *Auth0FgaTupleKeys) SetTupleKeys(v []Auth0FgaTupleKey) {
	o.TupleKeys = v
}

func (o Auth0FgaTupleKeys) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tuple_keys"] = o.TupleKeys
	}
	return json.Marshal(toSerialize)
}

type NullableAuth0FgaTupleKeys struct {
	value *Auth0FgaTupleKeys
	isSet bool
}

func (v NullableAuth0FgaTupleKeys) Get() *Auth0FgaTupleKeys {
	return v.value
}

func (v *NullableAuth0FgaTupleKeys) Set(val *Auth0FgaTupleKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableAuth0FgaTupleKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableAuth0FgaTupleKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuth0FgaTupleKeys(val *Auth0FgaTupleKeys) *NullableAuth0FgaTupleKeys {
	return &NullableAuth0FgaTupleKeys{value: val, isSet: true}
}

func (v NullableAuth0FgaTupleKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuth0FgaTupleKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
