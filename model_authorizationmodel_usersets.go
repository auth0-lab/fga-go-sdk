/*
 * Auth0 Fine Grained Authorization (FGA)
 *
 * Auth0 Fine Grained Authorization (FGA) is an early-stage product we are building at Auth0 as part of Auth0Lab to solve fine-grained authorization at scale. If you are interested in learning more about our plans, please reach out via our Discord chat.  The limits and information described in this document is subject to change.
 *
 * API version: 0.1
 * Contact: https://discord.gg/8naAwJfWN6
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth0fga

import (
	"encoding/json"
)

// AuthorizationmodelUsersets struct for AuthorizationmodelUsersets
type AuthorizationmodelUsersets struct {
	Child *[]AuthorizationmodelUserset `json:"child,omitempty"`
}

// NewAuthorizationmodelUsersets instantiates a new AuthorizationmodelUsersets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationmodelUsersets() *AuthorizationmodelUsersets {
	this := AuthorizationmodelUsersets{}
	return &this
}

// NewAuthorizationmodelUsersetsWithDefaults instantiates a new AuthorizationmodelUsersets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationmodelUsersetsWithDefaults() *AuthorizationmodelUsersets {
	this := AuthorizationmodelUsersets{}
	return &this
}

// GetChild returns the Child field value if set, zero value otherwise.
func (o *AuthorizationmodelUsersets) GetChild() []AuthorizationmodelUserset {
	if o == nil || o.Child == nil {
		var ret []AuthorizationmodelUserset
		return ret
	}
	return *o.Child
}

// GetChildOk returns a tuple with the Child field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationmodelUsersets) GetChildOk() (*[]AuthorizationmodelUserset, bool) {
	if o == nil || o.Child == nil {
		return nil, false
	}
	return o.Child, true
}

// HasChild returns a boolean if a field has been set.
func (o *AuthorizationmodelUsersets) HasChild() bool {
	if o != nil && o.Child != nil {
		return true
	}

	return false
}

// SetChild gets a reference to the given []AuthorizationmodelUserset and assigns it to the Child field.
func (o *AuthorizationmodelUsersets) SetChild(v []AuthorizationmodelUserset) {
	o.Child = &v
}

func (o AuthorizationmodelUsersets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Child != nil {
		toSerialize["child"] = o.Child
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizationmodelUsersets struct {
	value *AuthorizationmodelUsersets
	isSet bool
}

func (v NullableAuthorizationmodelUsersets) Get() *AuthorizationmodelUsersets {
	return v.value
}

func (v *NullableAuthorizationmodelUsersets) Set(val *AuthorizationmodelUsersets) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationmodelUsersets) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationmodelUsersets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationmodelUsersets(val *AuthorizationmodelUsersets) *NullableAuthorizationmodelUsersets {
	return &NullableAuthorizationmodelUsersets{value: val, isSet: true}
}

func (v NullableAuthorizationmodelUsersets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationmodelUsersets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
